<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Order_status_updated_Action_1</name>
        <label>Order status updated Action 1</label>
        <locationX>50</locationX>
        <locationY>539</locationY>
        <actionName>Order.Order_status_updated</actionName>
        <actionType>emailAlert</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>SObjectRowId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
    </actionCalls>
    <apiVersion>59.0</apiVersion>
    <decisions>
        <description>Compare prior status value with current.</description>
        <name>Check_for_Prior_status</name>
        <label>Check for Prior status</label>
        <locationX>578</locationX>
        <locationY>323</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Check_for_Partially_Confirmed</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Unconfirmed</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Partially Confirmed</stringValue>
                </rightValue>
            </conditions>
            <label>Check for Partially Confirmed</label>
        </rules>
        <rules>
            <name>Check_for_Confirmed</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Unconfirmed</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Confirmed</stringValue>
                </rightValue>
            </conditions>
            <label>Check for Confirmed</label>
        </rules>
        <rules>
            <name>Check_for_Fulfilled</name>
            <conditionLogic>(1 OR 2) AND 3</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Confirmed</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Partially Confirmed</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Fulfilled</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Create_case</targetReference>
            </connector>
            <label>Check for Fulfilled</label>
        </rules>
        <rules>
            <name>Check_for_Partially_Returned</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Fulfilled</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Partially Returned</stringValue>
                </rightValue>
            </conditions>
            <label>Check for Partially Returned</label>
        </rules>
        <rules>
            <name>Check_for_Unpaid</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Partially Returned</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Unpaid</stringValue>
                </rightValue>
            </conditions>
            <label>Check for Unpaid</label>
        </rules>
        <rules>
            <name>Check_for_Overdue</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Fulfilled</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Overdue</stringValue>
                </rightValue>
            </conditions>
            <label>Check for Overdue</label>
        </rules>
        <rules>
            <name>Check_for_Closed</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Unpaid</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Closed</stringValue>
                </rightValue>
            </conditions>
            <label>Check for Closed</label>
        </rules>
        <rules>
            <name>Checked_for_Cancelled</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Unconfirmed</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Cancelled</stringValue>
                </rightValue>
            </conditions>
            <label>Checked for Cancelled</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <formulas>
        <name>subject</name>
        <dataType>String</dataType>
        <expression>&apos;Order Status flipped - &apos;&amp;{!$Record.OrderNumber}</expression>
    </formulas>
    <interviewLabel>order status update after Flow {!$Flow.CurrentDateTime}</interviewLabel>
    <label>order status update after Flow</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>Create_case</name>
        <label>Create case</label>
        <locationX>50</locationX>
        <locationY>431</locationY>
        <connector>
            <targetReference>Order_status_updated_Action_1</targetReference>
        </connector>
        <inputAssignments>
            <field>Comments</field>
            <value>
                <stringValue>Order status moved backward or flipped</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>CreatedById</field>
            <value>
                <stringValue>0054R00000BsK2yQAF</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>LastModifiedById</field>
            <value>
                <stringValue>0054R00000BsK2yQAF</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Member_Agency__c</field>
            <value>
                <elementReference>$Record.AccountId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Order__c</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <stringValue>0054R00000BsK2yQAF</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ParentId</field>
            <value>
                <stringValue>5004R000022BrH3QAK</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Subject</field>
            <value>
                <elementReference>subject</elementReference>
            </value>
        </inputAssignments>
        <object>Case</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <start>
        <locationX>452</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Check_for_Prior_status</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Status</field>
            <operator>IsChanged</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <object>Order</object>
        <recordTriggerType>Update</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
</Flow>
